#!/bin/zsh
#
# .zsh_plugins.txt - antidote plugins file
#

### Overview
#
# The `.zsh_plugins.txt` file is used by antidote to configure Zsh bundles. Bundles are
# just a fancy way of referring to Zsh utilities, frameworks, prompts, or plugins.
# `.zsh_plugins.txt` is used by antidote to generate a static `.zsh_plugins.zsh` file,
# which can then be sourced in your `.zshrc`. You can use this file as a starting point
# for your own config. Strip out instructional comments (ie: lines beginning with a '#')
# and any plugins you don't need, then add what you like and make it yours!
#
# NOTE: Order matters in this file! Some bundles need to be last, and others are
# prerequisites. Read the documentation for the plugins you use to ensure proper
# configuration.
#
###

# https://github.com/romkatv/powerlevel10k
romkatv/powerlevel10k 

### Utilities
#
# Utilities aren't traditional Zsh plugins - they aren't sourced Zsh scripts. Instead
# they provide commands that can be executed from your terminal session. One good
# example is zsh-bench, which is a utility that benchmarks your Zsh config. Utility
# bundles can often be made available simply with the `kind:path` annotation.
#
###
#romkatv/zsh-bench kind:path

# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins
#ohmyzsh/ohmyzsh path:lib/clipboard.zsh
#ohmyzsh/ohmyzsh path:plugins/copybuffer
#ohmyzsh/ohmyzsh path:plugins/copyfile
#ohmyzsh/ohmyzsh path:plugins/copypath
#ohmyzsh/ohmyzsh path:plugins/extract
#ohmyzsh/ohmyzsh path:plugins/magic-enter
#ohmyzsh/ohmyzsh path:plugins/fancy-ctrl-z
ohmyzsh/ohmyzsh path:plugins/nvm kind:defer
ohmyzsh/ohmyzsh path:plugins/jenv kind:defer

### Framework: zsh-utils
#
# zsh-utils is a micro-framework that is also well suited to pair with antidote. It
# provides much of the same core functionality from other bigger frameworks without the
# bloat or performance hit. Using zsh-utils, you may find you don't need much else.
# If you want a really thin framework, this is great.
#
###
belak/zsh-utils path:history
belak/zsh-utils path:utility
#belak/zsh-utils path:editor
#belak/zsh-utils path:prompt

# zsh-users/zsh-completions is a popular plugin for adding supplemental completions.
# We combine the `path:` and `kind:fpath` annotations here:
zsh-users/zsh-completions path:src kind:fpath

# Compinit plugins should be near the end of .zsh_plugins.txt so that $fpath has been
# fully populated. Use zsh-utils for its completion plugin.
belak/zsh-utils path:completion

# https://github.com/Aloxaf/fzf-tab
# fzf-tab needs to be loaded after compinit, but before plugins which will wrap widgets,
# such as zsh-autosuggestions or fast-syntax-highlighting!!
Aloxaf/fzf-tab

## Deferred Plugins
#
# In general, you should not defer plugins unless you know for sure they properly support 
# deferred loading, and there are no adverse side-effects. However, for certain plugins, 
# this can greatly increase your zsh startup speed.
#
# https://github.com/romkatv/zsh-defer#Caveats
zsh-users/zsh-autosuggestions kind:defer
zdharma-continuum/fast-syntax-highlighting kind:defer
# zsh-users/zsh-history-substring-search kind:defer

# vim: ft=zsh sw=2 ts=2 et
